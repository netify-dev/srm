% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/srm_stats.R
\name{srm_stats}
\alias{srm_stats}
\title{This function calculates srm statistics}
\usage{
srm_stats(
  mat,
  type = c("rowmeans", "colmeans", "totalmeans", "actor_var", "unique_var",
    "partner_var", "relationship_cov", "actor_partner_cov"),
  time = NULL
)
}
\arguments{
\item{mat}{A matrix or list of matrices.}

\item{type}{A string specifying the type of statistic to calculate.}

\item{time}{A string specifying the time point(s) to calculate.}
}
\value{
A vector or list (if longitudinal) of calculated network stats
}
\description{
This function calculates srm statistics
}
\examples{
# Simple example 
test_matrix <- matrix(c(0, 1, 2, 2, 0, 1, 1, 2, 0), nrow=3, ncol=3)

rownames(test_matrix) <- colnames(test_matrix) <- c("A", "B", "C")
actor_totalmeans <- srm_stats(test_matrix, type = "totalmeans")

\dontrun{
#Example taken from GED data
#subsetted to Mexico with resulting df as a dyadic dataframe

UCDP_GED <- read_excel(paste0(pth,"GEDEvent_v24_1.xlsx"))
mexico <- UCDP_GED |>
filter(country=='Mexico')
#turn dyadic df to a network object using netify using civ death as weight
#so we have a matrix for crossectional and list for longitudinal

#cross-sectional

mex_network_civ <- netify(
dyad_data = mexico,
actor1 = 'side_a',
actor2 = 'side_b',
weight = 'deaths_civilians',
symmetric = TRUE,
sum_dyads = TRUE,
diag_to_NA = TRUE,
missing_to_zero = TRUE
)

#longitudinal
mex_network_long <- netify(
  dyad_data = mexico,
  actor1 = 'side_a',
  actor2 = 'side_b',
  time = 'year',      
  weight = 'deaths_civilians',
  symmetric = TRUE,
  sum_dyads = TRUE,
  diag_to_NA = TRUE,
  missing_to_zero = TRUE
 )  

# Calculate srm stats for rowmeans
actor_mean <- srm_stats(mex_network_civ, type = "rowmeans")

# Calculate srm stats for a specific time point

actor_mean <- srm_stats(mex_network_long, type = "partner_var", time = "2015")

}
}
