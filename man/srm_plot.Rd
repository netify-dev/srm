% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/srm_plot.R
\name{srm_plot}
\alias{srm_plot}
\title{Create plots for SRM actor, dyadic, partner effects}
\usage{
srm_plot(
  mat,
  type = c("actor", "partner", "dyadic"),
  n = 10,
  time = NULL,
  facet = FALSE
)
}
\arguments{
\item{mat}{A matrix or list of matrices from srm_effects()}

\item{type}{A string specifying the type of effect to plot: "actor", "partner", or "dyadic"}

\item{n}{The number of top actors/partners to plot}

\item{time}{A string specifying the time point to plot}

\item{facet}{A logical indicating whether to facet multiple matrices}
}
\value{
A ggplot object or list of ggplot objects
}
\description{
This function creates visualizations of social relations model effects including
actor effects, partner effects, and dyadic effects.
}
\examples{
# Simple example with a basic matrix
test_matrix <- matrix(c(0, 1, 2, 2, 0, 1, 1, 2, 0), nrow=3, ncol=3)
rownames(test_matrix) <- colnames(test_matrix) <- c("A", "B", "C")
actor_effects <- srm_effects(test_matrix, type = "actor")
srm_plot(actor_effects, type = "actor", n = 3)

\dontrun{
# Example taken from GED data
# subsetted to Mexico with resulting df as a dyadic dataframe

UCDP_GED <- read_excel(paste0(pth,"GEDEvent_v24_1.xlsx"))
mexico <- UCDP_GED |>
filter(country=='Mexico')

# turn dyadic df to a network object using netify using civ death as weight
# so we have a matrix for crossectional and list for longitudinal

# cross-sectional

mex_network_civ <- netify(
dyad_data = mexico,
actor1 = 'side_a',
actor2 = 'side_b',
weight = 'deaths_civilians',
symmetric = TRUE,
sum_dyads = TRUE,
diag_to_NA = TRUE,
missing_to_zero = TRUE
)

# longitudinal
mex_network_long <- netify(
  dyad_data = mexico,
  actor1 = 'side_a',
  actor2 = 'side_b',
  time = 'year',      
  weight = 'deaths_civilians',
  symmetric = TRUE,
  sum_dyads = TRUE,
  diag_to_NA = TRUE,
  missing_to_zero = TRUE
 )  

# plot actor effects
# before running, matrix should be from srm_effects

actor_effect <- srm_effects(mex_network_long, type = "actor")

actor_plot <- srm_plot(actor_effect, type = "actor", n = 5)

# plot dyadic effects
dyadic_effect <- srm_effects(mex_network_long, type = "unique")
dyadic_plot <- srm_plot(dyadic_effect, type = "dyadic", time= "2015")

# for longitudinal, can use facet argument for actor/partner effect
actor_plot_facet <- srm_plot(actor_effect, type = "actor", facet=TRUE)
}
}
